---
description: Database interactions, saving user progres, saving user credentials, authenticaion
globs: .py
---
# Database Structure

## General Rules
- The project uses **PostgreSQL** at all times.
- All database interactions go through the **Python backend**.
- Everything in the database follows **snake_case** naming conventions.

## Reading the Setup
- The **first variable** in each table description is the **primary key**.
- A **tag in brackets** `[]` specifies restrictions like `not_null`, `unique`, etc.
- A **foreign key** follows the format `(table_variable)`, indicating its reference.
- Tables are listed with their **name** followed by a list of **columns**.

---

## Tables

### **user_table**
| Column   | Type           | Constraints                |
|----------|--------------|----------------------------|
| id       | SERIAL       | PRIMARY KEY                |
| email    | VARCHAR(100) | [unique, not_null]         |
| password | VARCHAR(100) | [not_null]                 |

---

### **user_history**
| Column    | Type              | Constraints                         |
|-----------|------------------|-------------------------------------|
| id        | SERIAL           | PRIMARY KEY                         |
| timestamp | TIMESTAMP        | [default now]                       |
| user      | INT              | (user_table, id) [not_null]         |
| subject   | VARCHAR(100)     | [not_null]                          |
| category  | VARCHAR(100)     | [not_null]                          |
| moment    | VARCHAR(100)     | [not_null]                          |
| difficulty| TINYINT          | [unsigned, not_null]                |
| skipped   | BOOL             | [default 0]                         |
| time      | SMALLINT         | [unsigned, not_null]                |

---

### **premium**
| Column | Type   | Constraints        |
|--------|-------|--------------------|
| user   | INT   | (user_table, id) [not_null] |
| tier   | TINYINT | [unsigned, not_null] |

---

### **achievements**
| Column     | Type           | Constraints              |
|------------|--------------|--------------------------|
| id         | SERIAL       | PRIMARY KEY               |
| name       | VARCHAR(100) | [not_null]               |
| description| VARCHAR(100) | [not_null]               |

---

### **user_achievements** 
| Column     | Type           | Constraints              |
|------------|--------------|--------------------------|
| user_id    | INT          | (user_table, id) [not_null] |
| achievement_id | INT      | (achievements, id) [not_null] |
| achieved   | BOOL         | [default 0]              |
| timestamp  | TIMESTAMP    | [default now]            |
| PRIMARY KEY (user_id, achievement_id) |

---

### **gear**
| Column     | Type           | Constraints              |
|------------|--------------|--------------------------|
| id         | SERIAL       | PRIMARY KEY               |
| name       | VARCHAR(100) | [not_null]               |
| type       | VARCHAR(100) | [not_null]               |

---

### **user_gear** 
| Column     | Type           | Constraints              |
|------------|--------------|--------------------------|
| user_id    | INT          | (user_table, id) [not_null] |
| gear_id    | INT          | (gear, id) [not_null]    |
| unlocked   | BOOL         | [default 0]              |
| timestamp  | TIMESTAMP    | [default now]            |
| PRIMARY KEY (user_id, gear_id) |

---


